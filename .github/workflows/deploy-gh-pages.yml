# .github/workflows/deploy-gh-pages.yml
name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ] # Or your default branch (e.g., master)
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Specify your Node.js version
          cache: 'npm' # Or 'yarn' or 'pnpm'
      - name: Install dependencies
        run: npm install # Or 'yarn install' or 'pnpm install'
      - name: Build Frontend
        # Use npx vite build to only build the frontend part defined in vite.config.ts
        # This will output to /dist/public based on your vite.config.ts
        run: npx vite build 
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the content of the output directory specified in vite.config.ts
          path: './dist/public' 

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 